<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>