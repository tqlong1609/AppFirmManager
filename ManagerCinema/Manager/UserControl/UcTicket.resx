<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnReload.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ib9fLcVrmmwAAAAASUVORK5CYII=
</value>
  </data>
</root>