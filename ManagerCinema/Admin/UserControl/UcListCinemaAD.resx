<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>